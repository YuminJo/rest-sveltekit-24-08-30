server:
  port: 8090
spring:
  profiles:
    active: dev
    include: secret
  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB
  jackson:
    serialization:
      fail-on-empty-beans: false
  threads:
    virtual:
      enabled: true
  datasource:
    url: jdbc:h2:./db_dev;MODE=MYSQL
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
    open-in-view: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            redirect-uri: '${custom.site.backUrl}/{action}/oauth2/code/{registrationId}'
            scope: profile, email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub
logging:
  level:
    com.ll.rsv: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.orm.jdbc.bind: TRACE
    org.hibernate.orm.jdbc.extract: TRACE
    org.springframework.transaction.interceptor: TRACE
custom:
  dev:
    cookieDomain: localhost
    frontUrl: "http://${custom.dev.cookieDomain}:5173"
    backUrl: "http://${custom.dev.cookieDomain}:${server.port}"
  prod:
    cookieDomain: www.slog.gg
    frontUrl: "https://${custom.prod.cookieDomain}"
    backUrl: "https://api.${custom.prod.cookieDomain}"
  site:
    cookieDomain: "${custom.dev.cookieDomain}"
    frontUrl: "${custom.dev.frontUrl}"
    backUrl: "${custom.dev.backUrl}"
    name: slog
  jwt:
    secretKey: ON_SECRET
  accessToken:
    expirationSec: '#{60*60}'
  temp:
    dirPath: c:/temp/slog_dev/temp
  genFile:
    dirPath: c:/temp/slog_dev